stages:
    - build
    - package
    - publish

# Package name must be lowercase
variables:
    PACKAGE_NAME: "mjpg-streamer"
    VERSION: "1.1.0"

    # Dependency version. I.e. "latest", "1.0.0", "31.0.1", etc
    LIBUV_VERSION: "1.1.0"
    LIBUWS_VERSION: "0.11.0"
    LIBJPEG-TURBO_VERSION: "1.5.0"

###############
# arm
###############
build:arm:
    image: openrovdocker/armhf-buildtools
    tags:
        - arm
    stage: build
    variables:
        ARCH: "armhf"
    script:
        - wget http://openrov-software-nightlies.s3-us-west-2.amazonaws.com/gitlab/${ARCH}/libjpeg-turbo/libjpeg-turbo_${LIBJPEG-TURBO_VERSION}_${ARCH}.deb
        - wget http://openrov-software-nightlies.s3-us-west-2.amazonaws.com/gitlab/${ARCH}/libuv/libuv_${LIBUV_VERSION}_${ARCH}.deb
        - wget http://openrov-software-nightlies.s3-us-west-2.amazonaws.com/gitlab/${ARCH}/uwebsockets/uwebsockets_${LIBUWS_VERSION}_${ARCH}.deb
        - dpkg -i libjpeg-turbo_${LIBJPEG-TURBO_VERSION}_${ARCH}.deb
        - dpkg -i libuv_${LIBUV_VERSION}_${ARCH}.deb
        - dpkg -i uwebsockets_${LIBUWS_VERSION}_${ARCH}.deb
        - mkdir temp
        - cd temp
        - cmake -DCMAKE_INSTALL_PREFIX=/usr ..
        - make -j
        - mkdir -p ../build
        - make install DESTDIR=../build
    artifacts:
        paths:
            - build/
    
package:arm:
    image: openrovdocker/armhf-buildtools
    tags:
        - arm
    stage: package
    variables:
        ARCH: "armhf"
    script:
        - fpm -f -m info@openrov.com -s dir -t deb -a ${ARCH} -n ${PACKAGE_NAME} -v ${VERSION} --description ${PACKAGE_NAME} -C ./build ./
        - cp ${PACKAGE_NAME}*.deb ${PACKAGE_NAME}_${ARCH}_latest.deb
    artifacts:
        paths:
            - "*.deb"
    dependencies:
        - build:arm

publish:arm:
    image: openrovdocker/armhf-buildtools
    tags:
        - arm
    stage: publish
    variables:
        ARCH: "armhf"
    script:
        - aws s3 cp ./ s3://$S3_BUCKET/$ARCH/$PACKAGE_NAME --recursive --exclude "*" --include "*.deb"
    dependencies:
        - package:arm

###############
# amd64
###############

build:amd64:
    image: openrovdocker/amd64-buildtools
    tags:
        - amd64
    stage: build
    variables:
        ARCH: "amd64"
    script:
        - wget http://openrov-software-nightlies.s3-us-west-2.amazonaws.com/gitlab/${ARCH}/libjpeg-turbo/libjpeg-turbo_${LIBJPEG-TURBO_VERSION}_${ARCH}.deb
        - wget http://openrov-software-nightlies.s3-us-west-2.amazonaws.com/gitlab/${ARCH}/libuv/libuv_${LIBUV_VERSION}_${ARCH}.deb
        - wget http://openrov-software-nightlies.s3-us-west-2.amazonaws.com/gitlab/${ARCH}/uwebsockets/uwebsockets_${LIBUWS_VERSION}_${ARCH}.deb
        - dpkg -i libjpeg-turbo_${LIBJPEG-TURBO_VERSION}_${ARCH}.deb
        - dpkg -i libuv_${LIBUV_VERSION}_${ARCH}.deb
        - dpkg -i uwebsockets_${LIBUWS_VERSION}_${ARCH}.deb
        - mkdir temp
        - cd temp
        - cmake -DCMAKE_INSTALL_PREFIX=/usr ..
        - make -j
        - mkdir -p ../build
        - make install DESTDIR=../build
    artifacts:
        paths:
            - build/

package:amd64:
    image: openrovdocker/amd64-buildtools
    tags:
        - amd64
    stage: package
    variables:
        ARCH: "amd64"
    script:
        - fpm -f -m info@openrov.com -s dir -t deb -a ${ARCH} -n ${PACKAGE_NAME} -v ${VERSION} --description ${PACKAGE_NAME} -C ./build ./
        - cp ${PACKAGE_NAME}*.deb ${PACKAGE_NAME}_${ARCH}_latest.deb
    artifacts:
        paths:
            - "*.deb"
    dependencies:
        - build:amd64

publish:amd64:
    image: openrovdocker/amd64-buildtools
    tags:
        - amd64
    stage: publish
    variables:
        ARCH: "amd64"
    script:
        - aws s3 cp ./ s3://$S3_BUCKET/$ARCH/$PACKAGE_NAME --recursive --exclude "*" --include "*.deb"
    dependencies:
        - package:amd64
